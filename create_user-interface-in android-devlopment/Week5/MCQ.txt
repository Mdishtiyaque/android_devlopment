1.
Question 1
The manifest file contains:

Select all that apply.

1 point

Composables



Permissions 



Activities



Fragments 


2.
Question 2
One of the fundamental differences between the traditional View system and Compose is their development philosophy. What are their approaches?

1 point

The View system and Compose both use the declarative approach.



The View system follows the imperative approach, while Compose is based on the declarative approach to building UI.



The View system follows the declarative approach, while Compose is based on the imperative approach to building UI.



The View system and Compose both use the imperative approach.


3.
Question 3
What can a layout contain? Select all that apply.

1 point

UI Elements



Other layouts



Activities



Screens


4.
Question 4
True or False: Applying modifiers to a composable in different order may produce a different result. 

1 point

True



False


5.
Question 5
In the code below, what is the reason behind usage of the remember function and mutableStateOf observable?

val value = remember { mutableStateOf(/*some value*/) }

1 point

Reset of the variable value during function call.



Reset of the variable value during recomposition.



Prevent reset of the variable value during recomposition.


6.
Question 6
Which layout is used to place its children in a horizontal sequence?

1 point

Cell



Column



Grid



Row


7.
Question 7
Each item in a Grid is known as a:

1 point

Cell



Row



Column



Image


8.
Question 8
True or False: Modifying the Button style in the theme will change the appearance of every button in the application unless the theme style is overridden.

1 point

True 



False


9.
Question 9
Which unit would you use to set text size?

1 point

sp (scalable pixel)



dp (density independent pixel)



both sp and dp can be used


10.
Question 10
What will the output of this code be?


123456789
 var visible by remember { mutableStateOf(true) } Column {     if (visible) {     Text(text = "Hello") } Button(onClick = { visible = !visible }) {     Text("My Button")     } } 
 var visible by remember { mutableStateOf(true) 
} Column { 
    if (visible) { 
    Text(text = "Hello") 
} Button(onClick = { visible = !visible }) { 
    Text("My Button") 
    } 
}


1 point

The first Button click will instantly show the Text and the next Button click will have no effect.



The first Button click will instantly hide the Text and the following Button click will instantly show the Text.



The first Button click will start the fade in animation of the Text and the following Button click will start the fade out animation of the Text.



The first Button click will start the fade out animation of the Text and following Button click will start fade in animation of the Text


11.
Question 11
Which of the following is represented by an Activity?

1 point

the main program entry point



a component



the application screen



a UI pattern


12.
Question 12
Which of the following is the parent class for all types of views?

1 point

View



ImageView



ViewGroup



TextView


13.
Question 13
Which of the following is is the state an Activity enters as soon as it becomes visible on the screen?

1 point

resumed



created



started.



paused


14.
Question 14
Which of the following classes are all UI elements subclasses of?

1 point

XML



ViewGroup



Activity



View


15.
Question 15
Which of the following is a disadvantage of using XML to create a User Interface in Android Studio?

1 point

XML is an inflexible language.



XML can be difficult to debug.



XML can only run on devices of specific screen sizes and resolutions.



XML cannot be transferred over networks.


16.
Question 16
Which of the following is the process of initially generating the hierarchy of UI elements?

1 point

initialization



composable



recomposition



composition


17.
Question 17
Which of the following annotations is used to denote a composable component?

1 point

@component



@Composable.



@description



@fun


18.
Question 18
Which of the following built-in layouts in Compose places composables vertically?

1 point

layout 



row



box



column


19.
Question 19
Which of the following annotations allows you to preview designs built with Jetpack Compose?

1 point

Preview



@Composable



@Preview


20.
Question 20
Which of the following is the correct way to use a modifier to give a Column a background color of black and fill the available space?

1 point

1234
Column( Modifier.fillMaxSize().backgroundColor(color: 0XFF000000)) 
Column(
 Modifier.fillMaxSize().backgroundColor(color: 0XFF000000)
)




123
Column( modifier = Modifier.fillMaxSize().background(Color(color: 0XFF000000))
Column(
 modifier = Modifier.fillMaxSize().background(Color(color: 0XFF000000)
)



123
Column( Modifier.fillMaxSize().background(Color(color: 0XFF000000))
Column(
 Modifier.fillMaxSize().background(Color(color: 0XFF000000)
)


21.
Question 21
Which of the following modifiers is used to set the background color of a composable?

1 point

backgroundColor



background



color



layoutColor 


22.
Question 22
Which of the following is the default event handler added to the Button composable by Jetpack Compose?

1 point

onClick



onInput 



onStart



onPress


23.
Question 23
Which of the following event modifiers is used to specify a function to be executed when a user clicks a specific composable?

1 point

Modifier.draggable



Modifier.swipeable 



Modifier.selectable 



Modifier.clickable


24.
Question 24
Which of the following best describes what state is in programming?

1 point

The location of data within a program.



Data of a program that changes over time.



Data saved in memory. 



Data used to recreate an activity. 


25.
Question 25
Which of the following informs developers on how to use and organize individual UI elements and exposes patterns, themes and examples of UI designs and layouts at various levels?

1 point

User interfaces



A design system



Component hierarchies 



Built-in composables


26.
Question 26
Which of the following keywords is used for creating an object without creating a class?

1 point

interface



override



object



route


27.
Question 27
Which of the following Jetpack Compose layout arrangements adds equal space to all children?

1 point

start



center



space evenly



space around


28.
Question 28
Which of the following would you use to create a horizontal scrollable List for a large or unknown number of items?

1 point

lazy row



lazy grid



lazy column



lazy list


29.
Question 29
Which of the following is a mechanism for unifying and maintaining the application look and feel across all screens?

1 point

XML



a composable hierarchy



a theme



a design system


30.
Question 30
Which of the following APIs can be used to make sure a composable retains its state during recomposition triggered by animation?

1 point

recomposition API



state API



remember API



animate*AsState API